/* Generated By:JJTree&JavaCC: Do not edit this line. FreshMeatConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface FreshMeatConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int STARTSCRIPT = 5;
  /** RegularExpression Id. */
  int INTEGERTYPE = 6;
  /** RegularExpression Id. */
  int STRINGTYPE = 7;
  /** RegularExpression Id. */
  int BOOLTYPE = 8;
  /** RegularExpression Id. */
  int USING = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int THEN = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int FOR = 13;
  /** RegularExpression Id. */
  int TO = 14;
  /** RegularExpression Id. */
  int WHILE = 15;
  /** RegularExpression Id. */
  int NUMBER = 16;
  /** RegularExpression Id. */
  int DIGIT = 17;
  /** RegularExpression Id. */
  int OPENBLOCK = 18;
  /** RegularExpression Id. */
  int CLOSEBLOCK = 19;
  /** RegularExpression Id. */
  int SUM = 20;
  /** RegularExpression Id. */
  int MINUS = 21;
  /** RegularExpression Id. */
  int PLUS = 22;
  /** RegularExpression Id. */
  int DIVIDE = 23;
  /** RegularExpression Id. */
  int ASSIGNMENT = 24;
  /** RegularExpression Id. */
  int GREATER = 25;
  /** RegularExpression Id. */
  int LESS = 26;
  /** RegularExpression Id. */
  int GREATEREQUAL = 27;
  /** RegularExpression Id. */
  int LESSEQUAL = 28;
  /** RegularExpression Id. */
  int DIFFERENCE = 29;
  /** RegularExpression Id. */
  int EQUAL = 30;
  /** RegularExpression Id. */
  int ID = 31;
  /** RegularExpression Id. */
  int LETTER = 32;
  /** RegularExpression Id. */
  int VARCHARDELIMITER = 33;
  /** RegularExpression Id. */
  int SEMICOLON = 34;
  /** RegularExpression Id. */
  int COMMA = 35;
  /** RegularExpression Id. */
  int DOUBLEPOINTS = 36;
  /** RegularExpression Id. */
  int LEFTPARENT = 37;
  /** RegularExpression Id. */
  int RIGHTPARENT = 38;
  /** RegularExpression Id. */
  int HASHTAG = 39;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"Start\"",
    "\"int\"",
    "\"string\"",
    "\"bool\"",
    "\"using\"",
    "\"if\"",
    "\"then\"",
    "\"else\"",
    "\"for\"",
    "\"to\"",
    "\"while\"",
    "<NUMBER>",
    "<DIGIT>",
    "\"{\"",
    "\"}\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"=\"",
    "\">\"",
    "\"<\"",
    "\">=\"",
    "\"<=\"",
    "\"!=\"",
    "\"==\"",
    "<ID>",
    "<LETTER>",
    "\"\\\'\"",
    "\";\"",
    "\",\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"#\"",
  };

}
