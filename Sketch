Duvidas:
	1. O que pode ser feito para tirar a necessidade do lookAhead
	2. Como lidar com os choices conflicts
	3. Como foi feito para ter essas possibilidades de ter vazio
	


<STARTSCRIPT> <DOUBLEPOINTS> <ID> 
<OPENBLOCK>
 
(VariableDeclaration())* 

(FunctionDeclaration())*

(UseIf())*

(UseWhile())*

(UseFor())*

void IncludeDeclaration():
{
	<#> <INCLUDE> <ID> <SEMICOLON>
}

void VariableDeclaration():
{
  (DataType() < ID > <SEMICOLON >)
}

void DataType():
{
  < INTEGERTYPE > |< STRINGTYPE > | < BOOLTYPE >
}




<CLOSEBLOCK>


Para testes:

using talnamespace

Start: script
{
	int numero = 2, otnunero = 3, varisnumeros = 4;
	
	numero = 1;
	
}

	if isfalse > istrue then
	{		
		numero = 1;
	}
	else
	{
		otonumero = 2;
	}
	
	for numero = 1; to 5
	{
		meuotonumero = 3; 
	}
	
	while isTrue > isFalse
	{
		aqueleNumeroCabuloso = 4;
	}

	
	




using talnamespace;

Start : script 
{
	int identifier;
	string identifier;
	bool identifier; 
	
	if ( variable operação variable )
	{
		true
	}
	else
	{
		false
	}
	
}

//void UseIf(): {}
//{
//  	< IF > < LEFPARENT > variable BoolOperation() variable < RIGHPARENT >
//  	< OPENBLOCK >
//		LOGIC
//
//	< ELSE >
//	< OPENBLOCK >
//		LOGIC
//	< CLOSEBLOCK >
//
//	< CLOSEBLOCK >
 	
//}




<ID> ::= <LETRA>(<LETRA> | <DIGITO>)*

LETRA ::= [A-Z][a-z]